---
kind: Template
apiVersion: v1
metadata:
  name: nginx-frontend-build
objects:
# --------------
#   FRONT END Artifacts
# --------------
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: client-artifacts
    annotations:
      description: Keeps track of changes in the client / front end image
- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: client-artifacts
    annotations:
      description: Defines how to build the client / front end image
  spec:
    triggers:
    - type: ImageChange
      imageChange: {}
    - type: ConfigChange
    - type: GitHub
      github:
        secret: "${GITHUB_WEBHOOK_SECRET}"
    - type: Generic
      generic:
        secret: "${GENERIC_WEBHOOK_SECRET}"
    source:
      type: Git
      git:
        uri: "${SOURCE_REPOSITORY_URL}"
        ref: "${SOURCE_REPOSITORY_REF}"
      contextDir: ''
    strategy:
      type: Source
      sourceStrategy:
        from:
          kind: ImageStreamTag
          namespace: "${S2I_NAMESPACE}"
          name: nodejs:latest
    output:
      to:
        kind: ImageStreamTag
        name: client-artifacts:latest
- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: client-pipeline
    creationTimestamp: 
    labels:
      app: client-pipeline
      name: client-pipeline
      template: client-pipeline
  spec:
    runPolicy: Parallel
    source:
      type: Git
      git:
        uri: "${SOURCE_REPOSITORY_URL}"
        ref: "${SOURCE_REPOSITORY_REF}"
      contextDir: ''
    strategy:
      type: JenkinsPipeline
      jenkinsPipelineStrategy:
        jenkinsfilePath: Jenkinsfile
    output: {}
    resources: {}
    postCommit: {}
    nodeSelector: 
# ----------------
#   NGINX Runtime
# ----------------
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: nginx-runtime
    annotations:
      description: nginx runtime image
- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: nginx-runtime-build
    creationTimestamp:
    labels:
      app: nginx-runtime
  spec:
    source:
      git:
        uri: https://github.com/nginxinc/openshift-nginx.git
        ref: master
    strategy:
      dockerStrategy:
        dockerFilePath: Dockerfile
    output:
      to:
        kind: "ImageStreamTag"
        name: "nginx-runtime:latest"
# ----------------
#   FRONTEND HTTP
# ----------------
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: frontend
    annotations:
      description: Combines the client artifacts with the nginx-runtime
- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: frontend-build
    creationTimestamp: 
    labels:
      app: frontend
  spec:
    source:
      type: Dockerfile
      dockerfile: |-
        FROM nginx-runtime:latest
        COPY build /usr/share/nginx/html
        RUN chmod -R 555 /usr/share/nginx/html/
      images:
        - from:
            kind: ImageStreamTag
            name: client-artifacts:latest
          paths:
            - sourcePath: /opt/app-root/src/build/
              destinationDir: .
    strategy:
      type: Docker
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: nginx-runtime:latest
    triggers: 
      - imageChange: {}
        type: ImageChange
    output:
      to:
        kind: ImageStreamTag
        name: frontend:latest
 
# --------------
#   PARAMETERS
# --------------
parameters:
- name: NAME
  displayName: Name
  description: The name assigned to all of the frontend objects defined in this template.
  required: true
  value: shuber
- name: NAMESPACE
  displayName: Namespace
  required: true
  description: The OpenShift Namespace where the ImageStream resides.
  value: bcjustice-shuber-tools
- name: SOURCE_REPOSITORY_URL
  displayName: Git Repository URL
  required: true
  description: The URL of the repository with your application source code.
  value: https://github.com/bcgov/bcjustice-shuber-frontend.git
- name: SOURCE_REPOSITORY_REF
  displayName: Git Reference
  description: Set this to a branch name, tag or other ref of your repository if you
    are not using the default branch.
  value: openshift-ci-cd
- name: CONTEXT_DIR
  displayName: Context Directory
  description: Set this to the relative path to your project if it is not in the root
    of your repository.
- name: GITHUB_WEBHOOK_SECRET
  displayName: GitHub Webhook Secret
  description: A secret string used to configure the GitHub webhook.
  generate: expression
  from: "[a-zA-Z0-9]{40}"
- name: S2I_NAMESPACE
  displayName: Namespace
  description: The OpenShift Namespace where the S2I ImageStream resides.
  value: openshift
